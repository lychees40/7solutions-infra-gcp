global:
  domain: "argocd.nonprod.chxwe.com"

configs:
  params:
    server.insecure: true
  cm:
    users.anonymous.enabled: true
  rbac:
    policy.default: "role:readonly"

server:
  server:
    route:
      enabled: true
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  readinessProbe:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10
  service:
    annotations:
      cloud.google.com/neg: '{"ingress": true}'
      cloud.google.com/backend-config: '{"ports": {"http":"argo-cd-argocd-server", "external-http":"argocd-backend-config"}}'
  ingress:
    annotations:
      # google_dns_record_set.static.name
      # google_compute_global_address.dns.name
      # kubernetes.io/ingress.global-static-ip-name: argocd-ipv4
      external-dns.alpha.kubernetes.io/zone: public
      networking.gke.io/managed-certificates: argo-cd-argocd-server
    enabled: true
    controller: gke
    gke:
      backendConfig:
        healthCheck:
          checkIntervalSec: 30
          timeoutSec: 5
          healthyThreshold: 1
          unhealthyThreshold: 2
          type: HTTP
          requestPath: /healthz
          port: 8080
      frontendConfig:
        redirectToHttps:
          enabled: true
      managedCertificate:
        enabled: true
